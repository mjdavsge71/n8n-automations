{
  "active": false,
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Whether email contains n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Download PDF": {
      "main": [
        [
          {
            "node": "Insert into Pinecone vector store",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Book appointment": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "PDFs to download": {
      "main": [
        [
          {
            "node": "Download PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI": {
      "ai_embedding": [
        [
          {
            "node": "Insert into Pinecone vector store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Embeddings OpenAI2": {
      "ai_embedding": [
        [
          {
            "node": "Read Pinecone Vector Store",
            "type": "ai_embedding",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Assign label with AI",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Default Data Loader": {
      "ai_document": [
        [
          {
            "node": "Insert into Pinecone vector store",
            "type": "ai_document",
            "index": 0
          }
        ]
      ]
    },
    "Anthropic Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Assign label with AI": {
      "main": [
        [
          {
            "node": "Add automation label",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Add music label",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Vector Store Retriever": {
      "ai_retriever": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "ai_retriever",
            "index": 0
          }
        ]
      ]
    },
    "Get calendar availability": {
      "ai_tool": [
        [
          {
            "node": "Appointment booking agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Read Pinecone Vector Store": {
      "ai_vectorStore": [
        [
          {
            "node": "Vector Store Retriever",
            "type": "ai_vectorStore",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Question and Answer Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Whether email contains n8n": {
      "main": [
        [
          {
            "node": "Execute JavaScript",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On new email to nathan's inbox": {
      "main": [
        [
          {
            "node": "Assign label with AI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Recursive Character Text Splitter": {
      "ai_textSplitter": [
        [
          {
            "node": "Default Data Loader",
            "type": "ai_textSplitter",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-10-29T15:46:43.796Z",
  "id": "Y6jGEvty3ZA1sx6l",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Advanced AI Demo",
  "nodes": [
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "__rl": true,
          "mode": "list",
          "value": "C079GL6K3U6",
          "cachedResultName": "general"
        },
        "text": "=Data from webhook:  {{ $json.query.email }}",
        "otherOptions": {}
      },
      "id": "bd5a8e76-3398-463e-9e28-b00c98daeb6e",
      "name": "Send message",
      "type": "n8n-nodes-base.slack",
      "position": [
        -220,
        820
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "content": "![h](https://i.postimg.cc/9XLvL5dL/slide-sf-talk.png#full-width)",
        "height": 677.0358687053997,
        "width": 1163.3132111854613,
        "color": 7
      },
      "id": "dcf1c3dd-ca1e-4c11-9665-bcb64f05ebb4",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2180,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# What is n8n?\n### Low-code Automation Platform for technical teams",
        "height": 99,
        "width": 437,
        "color": 7
      },
      "id": "a7d7623f-e9fd-4a0d-9728-04afb4de5a96",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -700,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "id": "da05188e-65a2-498a-ba84-95a6e7ceb704",
      "name": "Execute JavaScript",
      "type": "n8n-nodes-base.code",
      "position": [
        -220,
        620
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "content": "# Example #2\n### RAG with PDF as source",
        "height": 106,
        "width": 318,
        "color": 6
      },
      "id": "677d760f-24e9-4b5d-bb88-aa32ab295846",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1880,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "chunkSize": 3000,
        "chunkOverlap": 200,
        "options": {}
      },
      "id": "9240b687-7b51-487a-9032-aba007b72e51",
      "name": "Recursive Character Text Splitter",
      "type": "@n8n/n8n-nodes-langchain.textSplitterRecursiveCharacterTextSplitter",
      "position": [
        2560,
        1240
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "f60f309d-5039-4b00-92dc-167da7aaf5e0",
      "name": "Embeddings OpenAI",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        2320,
        1060
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "sB0hT8y0mcY33UDe",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "dataType": "binary",
        "loader": "pdfLoader",
        "options": {
          "metadata": {
            "metadataValues": [
              {
                "name": "document-title",
                "value": "={{ $('PDFs to download').item.json.whitepaper_title }}"
              },
              {
                "name": "document-publish-year",
                "value": "={{ $('PDFs to download').item.json.publish_year }}"
              },
              {
                "name": "document-author",
                "value": "={{ $('PDFs to download').item.json.author }}"
              }
            ]
          }
        }
      },
      "id": "dca925e2-73f0-45d5-9fca-3c49b9a82208",
      "name": "Default Data Loader",
      "type": "@n8n/n8n-nodes-langchain.documentDefaultDataLoader",
      "position": [
        2540,
        1060
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "temperature": 0.3
        }
      },
      "id": "7d09a806-0597-4ce8-940b-1296dc0c6635",
      "name": "OpenAI Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        3280,
        1080
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "sB0hT8y0mcY33UDe",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0112fcaa-2a14-4912-9fb0-41765306d795",
      "name": "Embeddings OpenAI2",
      "type": "@n8n/n8n-nodes-langchain.embeddingsOpenAi",
      "position": [
        3420,
        1380
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "sB0hT8y0mcY33UDe",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {},
      "id": "25cfc244-6ed0-42c5-af9b-a1dd7e4aadf7",
      "name": "Vector Store Retriever",
      "type": "@n8n/n8n-nodes-langchain.retrieverVectorStore",
      "position": [
        3480,
        1080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "={{ $json.file_url }}",
        "options": {}
      },
      "id": "771f7f42-cd3d-451c-8fb3-6357b16f4b54",
      "name": "Download PDF",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        2140,
        840
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {},
      "id": "e493f4fc-ecb5-4f0e-82d6-267eb0aa1292",
      "name": "PDFs to download",
      "type": "n8n-nodes-base.noOp",
      "position": [
        1880,
        840
      ],
      "notesInFlow": true,
      "typeVersion": 1,
      "notes": "BTC Whitepaper + metadata"
    },
    {
      "parameters": {
        "content": "## A. Load PDF into Pinecone\nDownload the PDF, then text embeddings into Pincecone",
        "height": 91.0723900084547,
        "width": 414.36616595939887,
        "color": 4
      },
      "id": "1ee100ba-cef5-42a4-9e0d-535f07a840e3",
      "name": "Sticky Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1880,
        680
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## B. Chat with PDF\nUse GPT4o to chat with Pinecone index",
        "height": 86.95121951219511,
        "width": 284.62109466374466,
        "color": 4
      },
      "id": "4196669c-3b88-43ff-a8f0-bcb60cc3003a",
      "name": "Sticky Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3040,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "pineconeIndex": {
          "__rl": true,
          "mode": "list",
          "value": "whitepapers",
          "cachedResultName": "whitepapers"
        },
        "options": {
          "pineconeNamespace": "whitepaper"
        }
      },
      "id": "a661fbf3-4711-4f46-96d7-c3b826adf585",
      "name": "Read Pinecone Vector Store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "position": [
        3420,
        1220
      ],
      "typeVersion": 1,
      "credentials": {
        "pineconeApi": {
          "id": "xRKCzgELCI0xUpRF",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}. \nOnly use vector store knowledge to answer the question. Don't make anything up. If you don't know the answer, tell the user that you don't know.",
        "options": {}
      },
      "id": "de869f18-ac60-419e-814c-1306b5933c6c",
      "name": "Question and Answer Chain",
      "type": "@n8n/n8n-nodes-langchain.chainRetrievalQa",
      "position": [
        3280,
        860
      ],
      "typeVersion": 1.3
    },
    {
      "parameters": {
        "content": "# Example #3\n### AI Assistant that knows how to use predefined API endpoints ",
        "height": 106,
        "width": 504.25,
        "color": 6
      },
      "id": "570eface-fe80-4adf-a89b-175eb9e11caa",
      "name": "Sticky Note6",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        4820,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Example #1\n### Categorize incoming emails with AI",
        "height": 111,
        "width": 318,
        "color": 6
      },
      "id": "221707d1-e513-4b19-a4fc-c4776ce6049a",
      "name": "Sticky Note7",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        460,
        460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "temperature": 0.4
        }
      },
      "id": "fa78c093-962c-4f37-99f6-4f521d191f1c",
      "name": "Anthropic Chat Model",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "position": [
        5020,
        940
      ],
      "typeVersion": 1.2,
      "credentials": {
        "anthropicApi": {
          "id": "fCYgkuujkVTYmWom",
          "name": "Anthropic account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Call this tool to get the appointment availability for a particular period on the calendar. The tool may refer to availability as \"Free\" or \"Busy\". \n\nUse {timeMin} and {timeMax} to specify the window for the availability query. For example, to get availability for 25 July, 2024 the {timeMin} would be 2024-07-25T09:00:00+02:00 and {timeMax} would be 2024-07-25T17:00:00+02:00.\n\nIf the tool returns an empty response, it means that something went wrong. It does not mean that there is no availability.",
        "method": "POST",
        "url": "https://www.googleapis.com/calendar/v3/freeBusy",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleCalendarOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"timeMin\": \"{timeMin}\",\n  \"timeMax\": \"{timeMax}\",\n  \"timeZone\": \"Europe/Berlin\",\n  \"groupExpansionMax\": 20,\n  \"calendarExpansionMax\": 10,\n  \"items\": [\n    {\n      \"id\": \"max@n8n.io\"\n    }\n  ]\n}"
      },
      "id": "0a4ecfad-6361-48a3-9482-be723fce96c6",
      "name": "Get calendar availability",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "position": [
        5340,
        940
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "=You are an efficient and courteous assistant tasked with scheduling appointments with Max Tkacz.\n\nWhen users mention an appointment or meeting, they are referring to a meeting with Max.\nWhen users refer to the calendar or \"your schedule,\" they are referring to Max's calendar. \n\nYou can use various tools to access and manage Max's calendar. Your primary goal is to assist users in successfully booking an appointment with Max, ensuring no scheduling conflicts. Only book an appointment if the requested time slot is available (the tool may refer to this as \"Free\")\n\nToday's date is {{ $today.format('dd LLL yyyy') }}.\nAppointments are always 30 minutes in length. \n\n\nProvide accurate information at all times. If the tools are not functioning correctly, inform the user that you are unable to assist them at the moment.\n"
        }
      },
      "id": "d9d877b7-ce1d-4baa-a7c1-55f683d85e17",
      "name": "Appointment booking agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        5120,
        720
      ],
      "typeVersion": 1.6
    },
    {
      "parameters": {
        "content": "![h](https://i.imghippo.com/files/d9Bgv1721858679.png#full-width)\n[Open Calendar](https://calendar.google.com/calendar/u/0/r/day/2024/7/26)",
        "height": 571.8601927804875,
        "width": 327.46658341463433,
        "color": 7
      },
      "id": "7897159f-ad00-4820-9c5a-3192bef6bade",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        5740,
        680
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "contextWindowLength": 10
      },
      "id": "67b9afeb-9ffc-4654-8472-885fc258850b",
      "name": "Window Buffer Memory",
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "position": [
        5160,
        940
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "![h](https://i.postimg.cc/kXW9XrZt/Screenshot-2024-07-24-at-15-18-27.png#full-width)\nBTC Whitepaper references",
        "height": 403.1877919219511,
        "width": 615.2162978341456,
        "color": 7
      },
      "id": "1e4b67e7-9832-4056-b91c-8ea5ffd7fb37",
      "name": "Sticky Note8",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        3820,
        880
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Connect with me or explore this demo 👇\n![QR](https://i.postimg.cc/VNkdCLQh/frame.png#full-width)",
        "height": 398.9629539487597,
        "width": 345.33741540309194,
        "color": 7
      },
      "id": "5178dea8-17c4-4f51-b0a7-a8b71caf8273",
      "name": "Sticky Note9",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        7100,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "# Thank you and happy flowgramming 🤘\n\n### Max Tkacz | Senior Developer Advocate @ n8n",
        "height": 197.19036476628202,
        "width": 411.2946586626259,
        "color": 7
      },
      "id": "543c6a34-db24-4855-b07c-1cf7afa6310e",
      "name": "Sticky Note10",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6660,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "mode": "insert",
        "pineconeIndex": {
          "__rl": true,
          "mode": "list",
          "value": "whitepapers",
          "cachedResultName": "whitepapers"
        },
        "options": {
          "clearNamespace": true,
          "pineconeNamespace": "whitepaper"
        }
      },
      "id": "bed25db3-fe74-4113-a5c8-3833ab25ffd1",
      "name": "Insert into Pinecone vector store",
      "type": "@n8n/n8n-nodes-langchain.vectorStorePinecone",
      "position": [
        2360,
        840
      ],
      "typeVersion": 1,
      "credentials": {
        "pineconeApi": {
          "id": "xRKCzgELCI0xUpRF",
          "name": "PineconeApi account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Call this tool to book an appointment in the calendar. ",
        "method": "POST",
        "url": "https://www.googleapis.com/calendar/v3/calendars/max@n8n.io/events",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleCalendarOAuth2Api",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"summary\": \"Appointment with {userName}\",\n  \"start\": {\n    \"dateTime\": \"{startTime}\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"end\": {\n    \"dateTime\": \"{endTime}\",\n    \"timeZone\": \"Europe/Berlin\"\n  },\n  \"attendees\": [\n    {\"email\": \"max@n8n.io\"},\n    {\"email\": \"{userEmail}\"}\n  ]\n}",
        "placeholderDefinitions": {
          "values": [
            {
              "name": "userName",
              "description": "The full name of the user making the appointment. Like John Doe"
            },
            {
              "name": "startTime",
              "description": "The start time of the event in Europe/Berlin timezone. For example, 2024-07-24T10:00:00+02:00"
            },
            {
              "name": "endTime",
              "description": "The end time of the event in Europe/Berlin timezone. It should always be 30 minutes after the startTime. "
            },
            {
              "name": "userEmail",
              "description": "The email address of the user making the appointment"
            }
          ]
        }
      },
      "id": "816ab230-b4d9-4d17-8c6d-a4846ae01d0c",
      "name": "Book appointment",
      "type": "@n8n/n8n-nodes-langchain.toolHttpRequest",
      "position": [
        5500,
        940
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "public": true,
        "initialMessages": "Hi there! 👋\nI can help you schedule an appointment with Max Tkacz. On which day would you like to meet?",
        "options": {
          "title": "Book an appointment with Max"
        }
      },
      "id": "98de349d-6790-4cf5-8799-a0dd0f7d069f",
      "name": "When chat message received",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "position": [
        3040,
        860
      ],
      "webhookId": "c348693e-9c43-4bf2-90a5-23786273e809",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "### Explore 100+ AI Workflow templates on n8n.io\n[Open Templates Library](https://n8n.io/workflows)",
        "height": 80,
        "width": 411.2946586626259,
        "color": 7
      },
      "id": "b24df25a-9376-4ca9-8e58-f0d50606129e",
      "name": "Sticky Note11",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6660,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "### Ask a question in our community (13k+ members)\n[Explore n8n community](https://community.n8n.io/)",
        "height": 80,
        "width": 411.2946586626259,
        "color": 7
      },
      "id": "5cd42dcc-c033-4b08-b8ed-fa7763659440",
      "name": "Sticky Note12",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        6660,
        800
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "model": "gpt-4o",
        "options": {
          "temperature": 0.5
        }
      },
      "id": "2f1032aa-78c4-4d32-b322-63cc7e11f319",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        700,
        900
      ],
      "typeVersion": 1,
      "credentials": {
        "openAiApi": {
          "id": "sB0hT8y0mcY33UDe",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $json.id }}",
        "labelIds": [
          "Label_4763053241338138112"
        ]
      },
      "id": "abf69acc-103f-48da-988a-60a9c5948803",
      "name": "Add automation label",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1200,
        540
      ],
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "NM4WP7MhZV0lOMHY",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "pollTimes": {
          "item": [
            {
              "mode": "everyMinute"
            }
          ]
        },
        "simple": false,
        "filters": {},
        "options": {}
      },
      "id": "18fb80e8-c5ff-4260-915e-a8886c1afab1",
      "name": "On new email to nathan's inbox",
      "type": "n8n-nodes-base.gmailTrigger",
      "position": [
        480,
        700
      ],
      "typeVersion": 1.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "NM4WP7MhZV0lOMHY",
          "name": "Gmail account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "addLabels",
        "messageId": "={{ $json.id }}",
        "labelIds": [
          "Label_6822395192337188416"
        ]
      },
      "id": "f5aab78d-bcd2-40f5-8877-11d568d710dc",
      "name": "Add music label",
      "type": "n8n-nodes-base.gmail",
      "position": [
        1200,
        740
      ],
      "typeVersion": 2.1,
      "credentials": {
        "gmailOAuth2": {
          "id": "NM4WP7MhZV0lOMHY",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "inputText": "={{ $json.text }}",
        "categories": {
          "categories": [
            {
              "category": "automation",
              "description": "email on the topic of automation or workflows and automated processes, includes newsletters on this topic"
            },
            {
              "category": "music",
              "description": "email on the topic of music, for example from an artist "
            }
          ]
        },
        "options": {}
      },
      "id": "29d99935-35e5-4ce1-a20a-a77a59f558f9",
      "name": "Assign label with AI",
      "type": "@n8n/n8n-nodes-langchain.textClassifier",
      "position": [
        720,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "path": "74facfd7-0f51-4605-9724-2c300594fcf9",
        "options": {}
      },
      "id": "f2921a2f-d838-4b65-8817-184d1537d680",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "position": [
        -700,
        700
      ],
      "webhookId": "74facfd7-0f51-4605-9724-2c300594fcf9",
      "typeVersion": 2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "a0b16c44-03ea-4e96-9671-7b168697186d",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.query.email }}",
              "rightValue": "@n8n"
            }
          ]
        },
        "options": {}
      },
      "id": "8d88e1ae-10fc-4bd3-992d-cccff9ccdbe7",
      "name": "Whether email contains n8n",
      "type": "n8n-nodes-base.if",
      "position": [
        -500,
        700
      ],
      "typeVersion": 2
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2024-10-29T15:46:43.796Z",
      "updatedAt": "2024-10-29T15:46:43.796Z",
      "role": "workflow:owner",
      "workflowId": "Y6jGEvty3ZA1sx6l",
      "projectId": "fNTluMKsYBer8dQm",
      "project": {
        "createdAt": "2024-10-24T22:05:51.404Z",
        "updatedAt": "2024-10-24T22:06:36.731Z",
        "id": "fNTluMKsYBer8dQm",
        "name": "Matthew Savage <matt@focusedmobile.com>",
        "type": "personal",
        "projectRelations": [
          {
            "createdAt": "2024-10-24T22:05:51.404Z",
            "updatedAt": "2024-10-24T22:05:51.404Z",
            "role": "project:personalOwner",
            "userId": "f5fff29b-3415-42e5-8f3d-79f50031307a",
            "projectId": "fNTluMKsYBer8dQm",
            "user": {
              "createdAt": "2024-10-24T22:05:50.761Z",
              "updatedAt": "2024-10-27T15:26:11.540Z",
              "id": "f5fff29b-3415-42e5-8f3d-79f50031307a",
              "email": "matt@focusedmobile.com",
              "firstName": "Matthew",
              "lastName": "Savage",
              "personalizationAnswers": {
                "version": "v4",
                "personalization_survey_submitted_at": "2024-10-24T22:06:42.111Z",
                "personalization_survey_n8n_version": "1.64.2"
              },
              "settings": {
                "userActivated": true,
                "firstSuccessfulWorkflowId": "3Phy51d3eMdserLa",
                "userActivatedAt": 1729926141984,
                "isOnboarded": true
              },
              "role": "global:owner",
              "disabled": false,
              "mfaEnabled": false,
              "isPending": false,
              "isOwner": true
            }
          }
        ]
      }
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2024-10-29T15:46:43.796Z",
  "versionId": "f3fe840c-b732-47f3-8359-a10eb251266d"
}